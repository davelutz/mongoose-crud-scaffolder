'use strict';

var fs = require('fs');
var utils = require('./utils');

// writes down schema content.
function createFileContent(fd, name, pluralName, types, cb) {
  // Const
  var TAB = '    ';
  var NL = '\r\n';
  var headerComment = '\'use strict\';\r\n' +
    '\r\n' +
    ' /**\r\n' +
    ' * ' + name + ' controller file' +
    ' * autogenerated by mongoose-scaffold-crud' +
    ' **/' + NL + NL;
  var requireBlock = 'var ' + pluralName + ' = require(\'express\').Router(),' + NL +
    TAB + 'Model = require(\'../models/model-' + pluralName + '.js\');' + NL + NL;

  var listBlock = '' +
    pluralName + '.get(\'/\', function(req, res) {' + NL +
    TAB + 'Model.find(function(err, ' + pluralName + '){' + NL +
    TAB + TAB + 'if (req.accepts(\'html\', \'json\') === \'json\') {' + NL +
    TAB + TAB + TAB + 'if(err) {' + NL +
    TAB + TAB + TAB + TAB + 'return res.json(500, {' + NL +
    TAB + TAB + TAB + TAB + TAB + 'message: \'Error getting ' + pluralName + '.\'' + NL +
    TAB + TAB + TAB + TAB + '});' + NL +
    TAB + TAB + TAB + '}' + NL +
    TAB + TAB + TAB + 'return res.json(' + pluralName + ');' + NL +
    TAB + TAB + '} else {' + NL +
    TAB + TAB + TAB + 'if(err) {' + NL +
    TAB + TAB + TAB + TAB + 'return res.send(\'500: Internal Server Error\', 500);' + NL +
    TAB + TAB + TAB + '}' + NL +
    TAB + TAB + 'return res.render(\'' + pluralName + '/index\', {' + pluralName + ': ' + pluralName + '});' + NL +
    TAB + TAB + '}' + NL +
    TAB + '});' + NL +
    '});' + NL + NL;

  var createBlock = '' +
    pluralName + '.post(\'/\', function(req, res) {' + NL +
    TAB + 'var ' + name + ' = new Model({' + NL;

  for (var i = 0; i < types.length; i++) {
    var current = types[i];
    var line = '';
    // this scaffolder is dumb.
    if (current.type === 'Array') {
      line = line + TAB + TAB + '// TODO: generate Array parser.';
    } else if (current.type === 'Date') {
      line = line + TAB + TAB + '// TODO: generate Date parser.';
    } else if (current.type === 'Boolean') {
      line = line + TAB + TAB + '\'' + current.name +
        '\': (req.body[\'' + current.name + '\']) ? (req.body[\'' + current.name + '\'] === \'true\') : false';
    } else {
      line = line + TAB + TAB + '\'' + current.name + '\': req.body[\'' + current.name + '\']';
    }
    if (i < types.length - 1) {
      line = line + ',';
    }
    line = line + NL;
    createBlock = createBlock + line;
  }

  createBlock = createBlock + TAB + '});' + NL +
    TAB + '' + name + '.save(function(err, ' + name + '){' + NL +
    TAB + TAB + 'if (req.accepts(\'html\', \'json\') === \'json\') {' + NL +
    TAB + TAB + TAB + 'if(err) {' + NL +
    TAB + TAB + TAB + TAB + 'return res.json(500, {' + NL +
    TAB + TAB + TAB + TAB + TAB + 'message: \'Error saving item.\',' + NL +
    TAB + TAB + TAB + TAB + TAB + 'error: err' + NL +
    TAB + TAB + TAB + TAB + '});' + NL +
    TAB + TAB + TAB + '}' + NL +
    TAB + TAB + TAB + 'return res.json({' + NL +
    TAB + TAB + TAB + TAB + 'message: \'saved\',' + NL +
    TAB + TAB + TAB + TAB + '_id: ' + name + '._id' + NL +
    TAB + TAB + TAB + '});' + NL +
    TAB + TAB + '} else {' + NL +
    TAB + TAB + TAB + 'if(err) {' + NL +
    TAB + TAB + TAB + TAB + 'return res.send(\'500: Internal Server Error\', 500);' + NL +
    TAB + TAB + TAB + '}' + NL +
    TAB + TAB + TAB + 'return res.render(\'' + pluralName + '/edit\', {' + name + ': ' + name + '});' + NL +
    TAB + TAB + '}' + NL +
    TAB + '});' + NL +
    '});' + NL + NL;

  var readBlock = '' +
    pluralName + '.get(\'/:id\', function(req, res) {' + NL +
    TAB + 'var id = req.params.id;' + NL +
    TAB + 'Model.findOne({_id: id}, function(err, ' + name + '){' + NL +
    TAB + TAB + 'if (req.accepts(\'html\', \'json\') === \'json\') {' + NL +
    TAB + TAB + TAB + 'if(err) {' + NL +
    TAB + TAB + TAB + TAB + 'return res.json(500, {' + NL +
    TAB + TAB + TAB + TAB + TAB + 'message: \'Error getting ' + name + '.\'' + NL +
    TAB + TAB + TAB + TAB + '});' + NL +
    TAB + TAB + TAB + '}' + NL +
    TAB + TAB + TAB + 'if(!' + name + ') {' + NL +
    TAB + TAB + TAB + TAB + 'return res.json(404, {' + NL +
    TAB + TAB + TAB + TAB + TAB + 'message: \'No such ' + name + '.\'' + NL +
    TAB + TAB + TAB + TAB + '});' + NL +
    TAB + TAB + TAB + '}' + NL +
    TAB + TAB + TAB + 'return res.json(' + name + ');' + NL +
    TAB + TAB + '} else {' + NL +
    TAB + TAB + TAB + 'if(err) {' + NL +
    TAB + TAB + TAB + TAB + 'return res.send(\'500: Internal Server Error\', 500);' + NL +
    TAB + TAB + TAB + '}' + NL +
    TAB + TAB + TAB + 'if(!' + name + ') {' + NL +
    TAB + TAB + TAB + TAB + 'return res.end(\'No such ' + name + '\');' + NL +
    TAB + TAB + TAB + '}' + NL +
    TAB + TAB + TAB + 'return res.render(\'' + pluralName + '/edit\', {' + name + ': ' + name + ', flash: \'Created.\'});' + NL +
    TAB + TAB + '}' + NL +
    TAB + '});' + NL +
    '});' + NL + NL;
  var updateBlock = '' +
    pluralName + '.put(\'/:id\', function(req, res) {' + NL +
    TAB + 'var id = req.params.id;' + NL +
    TAB + 'Model.findOne({_id: id}, function(err, ' + name + '){' + NL +
    TAB + TAB + 'if (req.accepts(\'html\', \'json\') === \'json\') {' + NL +
    TAB + TAB + TAB + 'if(err) {' + NL +
    TAB + TAB + TAB + TAB + 'return res.json(500, {' + NL +
    TAB + TAB + TAB + TAB + TAB + 'message: \'Error saving ' + name + '\',' + NL +
    TAB + TAB + TAB + TAB + TAB + 'error: err' + NL +
    TAB + TAB + TAB + TAB + '});' + NL +
    TAB + TAB + TAB + '}' + NL +
    TAB + TAB + TAB + 'if(!' + name + ') {' + NL +
    TAB + TAB + TAB + TAB + 'return res.json(404, {' + NL +
    TAB + TAB + TAB + TAB + TAB + 'message: \'No such ' + name + '\'' + NL +
    TAB + TAB + TAB + TAB + '});' + NL +
    TAB + TAB + TAB + '}' + NL;

  for (var i = 0; i < types.length; i++) {
    var current = types[i];
    var line = '';
    // this scaffolder is dumb.
    if (current.type === 'Array') {
      line = line + TAB + TAB + TAB + '// TODO: generate Array parser.';
    } else if (current.type === 'Date') {
      line = line + TAB + TAB + TAB + '// TODO: generate Date parser.';
    } else if (current.type === 'Boolean') {
      line = line + TAB + TAB + TAB + '' + name + '[\'' + current.name +
        '\'] = (req.body[\'' + current.name + '\']) ? (req.body[\'' + current.name + '\'] === \'true\') : ' + name + '[\'' + current.name + '\']';
    } else {
      line = line + TAB + TAB + TAB + '' + name + '[\'' + current.name + '\'] = ' +
        'req.body[\'' + current.name + '\'] ? req.body[\'' + current.name + '\'] : ' + name + '[\'' + current.name + '\'];'
    }
    line = line + NL;
    updateBlock = updateBlock + line;
  }

  updateBlock = updateBlock +
    TAB + TAB + TAB + '' + name + '.save(function(err, ' + name + '){' + NL +
    TAB + TAB + TAB + TAB + 'if(err) {' + NL +
    TAB + TAB + TAB + TAB + TAB + 'return res.json(500, {' + NL +
    TAB + TAB + TAB + TAB + TAB + TAB + 'message: \'Error getting ' + name + '.\'' + NL +
    TAB + TAB + TAB + TAB + TAB + '});' + NL +
    TAB + TAB + TAB + TAB + '}' + NL +
    TAB + TAB + TAB + TAB + 'if(!' + name + ') {' + NL +
    TAB + TAB + TAB + TAB + TAB + 'return res.json(404, {' + NL +
    TAB + TAB + TAB + TAB + TAB + TAB + 'message: \'No such ' + name + '\'' + NL +
    TAB + TAB + TAB + TAB + TAB + '});' + NL +
    TAB + TAB + TAB + TAB + '}' + NL +
    TAB + TAB + TAB + TAB + 'return res.json(' + name + ');' + NL +
    TAB + TAB + TAB + '});' + NL +
    TAB + TAB + '} else {' + NL +
    TAB + TAB + TAB + 'if(err) {' + NL +
    TAB + TAB + TAB + TAB + 'return res.send(\'500: Internal Server Error\', 500);' + NL +
    TAB + TAB + TAB + '}' + NL +
    TAB + TAB + TAB + 'if(!' + name + ') {' + NL +
    TAB + TAB + TAB + TAB + 'return res.end(\'No such ' + name + '\');' + NL +
    TAB + TAB + TAB + '}' + NL;

  for (var i = 0; i < types.length; i++) {
    var current = types[i];
    var line = '';
    // this scaffolder is dumb.
    if (current.type === 'Array') {
      line = line + TAB + TAB + TAB + '// TODO: generate Array parser.';
    } else if (current.type === 'Date') {
      line = line + TAB + TAB + TAB + '// TODO: generate Date parser.';
    } else if (current.type === 'Boolean') {
      line = line + TAB + TAB + TAB + '' + name + '[\'' + current.name +
        '\'] = (req.body[\'' + current.name + '\']) ? (req.body[\'' + current.name + '\'] === \'true\') : ' + name + '[\'' + current.name + '\']';
    } else {
      line = line + TAB + TAB + TAB + '' + name + '[\'' + current.name + '\'] = ' +
        'req.body[\'' + current.name + '\'] ? req.body[\'' + current.name + '\'] : ' + name + '[\'' + current.name + '\'];'
    }
    line = line + NL;
    updateBlock = updateBlock + line;
  }

  updateBlock = updateBlock +
    TAB + TAB + TAB + '' + name + '.save(function(err, ' + name + '){' + NL +
    TAB + TAB + TAB + TAB + 'if(err) {' + NL +
    TAB + TAB + TAB + TAB + TAB + 'return res.send(\'500: Internal Server Error\', 500);' + NL +
    TAB + TAB + TAB + TAB + '}' + NL +
    TAB + TAB + TAB + TAB + 'if(!' + name + ') {' + NL +
    TAB + TAB + TAB + TAB + TAB + 'return res.end(\'No such ' + name + '\');' + NL +
    TAB + TAB + TAB + TAB + '}' + NL +
    TAB + TAB + TAB + TAB + 'return res.render(\'' + pluralName + '/edit\', {' + name + ': ' + name + ', flash: \'Saved.\'});' + NL +
    TAB + TAB + TAB + '});' + NL +
    TAB + TAB + '}' + NL +
    TAB + '});' + NL +
    '});' + NL + NL;

  var deleteBlock = '' +
    pluralName + '.delete(\'/:id\', function(req, res) {' + NL +
    TAB + 'var id = req.params.id;' + NL +
    TAB + 'Model.findOne({_id: id}, function(err, ' + name + '){' + NL +
    TAB + TAB + 'if (req.accepts(\'html\', \'json\') === \'json\') {' + NL +
    TAB + TAB + TAB + 'if(err) {' + NL +
    TAB + TAB + TAB + TAB + 'return res.json(500, {' + NL +
    TAB + TAB + TAB + TAB + TAB + 'message: \'Error getting ' + name + '.\'' + NL +
    TAB + TAB + TAB + TAB + '});' + NL +
    TAB + TAB + TAB + '}' + NL +
    TAB + TAB + TAB + 'if(!' + name + ') {' + NL +
    TAB + TAB + TAB + TAB + 'return res.json(404, {' + NL +
    TAB + TAB + TAB + TAB + TAB + 'message: \'No such ' + name + '\'' + NL +
    TAB + TAB + TAB + TAB + '});' + NL +
    TAB + TAB + TAB + '}' + NL +
    TAB + TAB + TAB + 'return res.json(' + name + ');' + NL +
    TAB + TAB + '} else {' + NL +
    TAB + TAB + TAB + 'if(err) {' + NL +
    TAB + TAB + TAB + TAB + 'return res.send(\'500: Internal Server Error\', 500);' + NL +
    TAB + TAB + TAB + '}' + NL +
    TAB + TAB + TAB + 'if(!' + name + ') {' + NL +
    TAB + TAB + TAB + TAB + 'return res.end(\'No such ' + name + '\');' + NL +
    TAB + TAB + TAB + '}' + NL +
    TAB + TAB + TAB + 'return res.render(\'index\', {flash: \'Item deleted.\'});' + NL +
    TAB + TAB + '}' + NL +
    TAB + '});' + NL +
    '});' + NL + NL;

  var exportLine = 'module.exports.' + pluralName + ' = ' + pluralName + ';';

  var text = headerComment + requireBlock + listBlock + createBlock +
    readBlock + updateBlock + deleteBlock + exportLine;
  var buf = new Buffer(text);
  fs.write(fd, buf, 0, buf.length, null, cb);
}

function generateController(name, pluralName, types, cb) {
  utils.generateDirectory('controllers', function(err) {
    if (err) {
      return cb(err);
    }
    var fileName = 'controllers/ctrl-' + pluralName + '.js';
    utils.createOrClearFile(fileName, function(err, fd) {
      if (err) {
        return cb(err);
      }
      createFileContent(fd, name, pluralName, types, function(err, data) {
        if (err) {
          return (cb(err));
        }
        fs.close(fd, cb);
      });
    });
  });
}

module.exports = {
  generateController: generateController
};
